// structure
?start: main
main: global_md? entry ruledef+ 
entry: call+			
call: loop*  rn
loop:  count? transgroup?
transgroup : "{" trans+ "}"
count: NUMBER "*"                                             -> repeat               
trans: _transc | _transv  

ruledef: "rule" rndef  mods*  "{" call* "}"
mods: md_mod | w_mod 


// definitions
global_md: "set" ("md" | "maxdepth") NUMBER
md_mod: ("md" | "maxdepth") NUMBER [">" _successor]          -> mmod
w_mod: ("w" |"weight") NUMBER                                -> wmod


// terminals
rn: NAME                                            -> rulename
rndef: NAME                                          -> rulenamedef
_successor: NAME

// transforms with one or more  numeric values
VID: "x"|"y"|"z"|"s"|"rx"|"ry"|"rz"|"h"|"hue"|"sat"|"b"|"brightness"|"a"|"alpha"
_transv: VID VALUE+

// transforms followed by a color
CID: "color" | "blend"

_transc: CID (COLORHEX | COLORNAME)

VALUE: SIGNED_NUMBER 
COLORHEX: "#" HEXDIGIT+ 
COLORNAME: NAME

NAME: /[^\W\d]\w*/ 

SET: "set" WORD (VALUE | COLORHEX | COLORNAME)



%import common.NUMBER  
%import common.HEXDIGIT
%import common.SIGNED_NUMBER
%import common.SIGNED_NUMBER
%import common.WORD
%import common.WS
%ignore WS
%import common.CPP_COMMENT
%ignore CPP_COMMENT